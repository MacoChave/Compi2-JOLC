
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftANDleftORrightNOTnonassocLESSGREATHERLESSEQGREATHEREQEQUALITYDIFERENTleftPLUSMINUSleftTIMESDIVleftMODleftPOTrightUMINUSAND BOOL CADENA CARACTER CHR COMMA DECIMAL DIFERENT DIV ELSE END EQUAL EQUALITY FALSE FLOAT FLOAT64 GREATHER GREATHEREQ ID IF INT64 LBRACE LESS LESSEQ LOWERCASE LPAR MINUS MOD NOT NOTHING NUMBERO OR PARSE PLUS POT PRINT PRINTLN RBRACE RPAR SEMICOL STR STRING TIMES TRUE TRUNC TYPEOF UPPERCASE WHILEinit : instruccionesinstrucciones : instrucciones instruccioninstrucciones : instruccioninstruccion  : print\n                    | println\n                    | definicion\n                    | asignacion\n                    | while\n                    | if\n                    | if_elseprint : PRINT LPAR print_args RPARprintln : PRINTLN LPAR print_args RPARprint_args : print_args COMMA exp_logicaprint_args : exp_logicadefinicion : IDasignacion : ID EQUAL exp_logicadata_type    : INT64\n                    | FLOAT64\n                    | STR\n                    | CHR\n                    | BOOLwhile : WHILE exp_logica instrucciones END SEMICOLif : IF exp_logica instrucciones END SEMICOLif_else : IF exp_logica instrucciones ELSE instrucciones END SEMICOLexp_logica    : exp_logica AND exp_logica\n                    | exp_logica OR exp_logicaexp_logica : NOT exp_logicaexp_logica : exp_relacionalexp_relacional   : exp_relacional LESS exp_relacional\n                        | exp_relacional LESSEQ exp_relacional\n                        | exp_relacional GREATHER exp_relacional\n                        | exp_relacional GREATHEREQ exp_relacional\n                        | exp_relacional EQUALITY exp_relacional\n                        | exp_relacional DIFERENT exp_relacionalexp_relacional : exp_aritmeticaexp_aritmetica   : exp_aritmetica PLUS exp_aritmetica\n                        | exp_aritmetica MINUS exp_aritmetica\n                        | exp_aritmetica TIMES exp_aritmetica\n                        | exp_aritmetica DIV exp_aritmetica\n                        | exp_aritmetica MOD exp_aritmetica\n                        | exp_aritmetica POT exp_aritmeticaexp_aritmetica : MINUS exp_aritmetica %prec UMINUSexp_aritmetica : LPAR exp_logica RPARexp_aritmetica  : NUMBEROexp_aritmetica : DECIMALexp_aritmetica : CARACTERexp_aritmetica : CADENAexp_aritmetica : TRUEexp_aritmetica : FALSEexp_aritmetica : IDexp_aritmetica : TYPEOF LPAR exp_logica RPARexp_aritmetica : STRING LPAR exp_logica RPARexp_aritmetica : FLOAT LPAR exp_logica RPARexp_aritmetica : TRUNC LPAR data_type COMMA exp_logica RPARexp_aritmetica : PARSE LPAR data_type COMMA exp_logica RPAR'
    
_lr_action_items = {'PRINT':([0,2,3,4,5,6,7,8,9,10,13,16,20,22,23,26,27,28,29,30,31,32,38,42,43,46,59,66,67,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,97,99,100,101,102,105,106,110,111,112,],[11,11,-3,-4,-5,-6,-7,-8,-9,-10,-15,-2,11,-28,-35,-44,-45,-46,-47,-48,-49,-50,11,-16,11,-27,-42,11,-11,-12,-25,-26,-29,-30,-31,-32,-33,-34,-36,-37,-38,-39,-40,-41,-43,11,-22,-51,-52,-53,-23,11,-54,-55,-24,]),'PRINTLN':([0,2,3,4,5,6,7,8,9,10,13,16,20,22,23,26,27,28,29,30,31,32,38,42,43,46,59,66,67,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,97,99,100,101,102,105,106,110,111,112,],[12,12,-3,-4,-5,-6,-7,-8,-9,-10,-15,-2,12,-28,-35,-44,-45,-46,-47,-48,-49,-50,12,-16,12,-27,-42,12,-11,-12,-25,-26,-29,-30,-31,-32,-33,-34,-36,-37,-38,-39,-40,-41,-43,12,-22,-51,-52,-53,-23,12,-54,-55,-24,]),'ID':([0,2,3,4,5,6,7,8,9,10,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,38,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,61,62,63,66,67,68,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,97,99,100,101,102,103,104,105,106,110,111,112,],[13,13,-3,-4,-5,-6,-7,-8,-9,-10,-15,32,32,-2,32,32,32,13,32,-28,-35,32,32,-44,-45,-46,-47,-48,-49,-50,13,-16,13,32,32,-27,32,32,32,32,32,32,32,32,32,32,32,32,-42,32,32,32,13,-11,32,-12,-25,-26,-29,-30,-31,-32,-33,-34,-36,-37,-38,-39,-40,-41,-43,13,-22,-51,-52,-53,32,32,-23,13,-54,-55,-24,]),'WHILE':([0,2,3,4,5,6,7,8,9,10,13,16,20,22,23,26,27,28,29,30,31,32,38,42,43,46,59,66,67,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,97,99,100,101,102,105,106,110,111,112,],[14,14,-3,-4,-5,-6,-7,-8,-9,-10,-15,-2,14,-28,-35,-44,-45,-46,-47,-48,-49,-50,14,-16,14,-27,-42,14,-11,-12,-25,-26,-29,-30,-31,-32,-33,-34,-36,-37,-38,-39,-40,-41,-43,14,-22,-51,-52,-53,-23,14,-54,-55,-24,]),'IF':([0,2,3,4,5,6,7,8,9,10,13,16,20,22,23,26,27,28,29,30,31,32,38,42,43,46,59,66,67,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,97,99,100,101,102,105,106,110,111,112,],[15,15,-3,-4,-5,-6,-7,-8,-9,-10,-15,-2,15,-28,-35,-44,-45,-46,-47,-48,-49,-50,15,-16,15,-27,-42,15,-11,-12,-25,-26,-29,-30,-31,-32,-33,-34,-36,-37,-38,-39,-40,-41,-43,15,-22,-51,-52,-53,-23,15,-54,-55,-24,]),'$end':([1,2,3,4,5,6,7,8,9,10,13,16,22,23,26,27,28,29,30,31,32,42,46,59,67,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,99,100,101,102,105,110,111,112,],[0,-1,-3,-4,-5,-6,-7,-8,-9,-10,-15,-2,-28,-35,-44,-45,-46,-47,-48,-49,-50,-16,-27,-42,-11,-12,-25,-26,-29,-30,-31,-32,-33,-34,-36,-37,-38,-39,-40,-41,-43,-22,-51,-52,-53,-23,-54,-55,-24,]),'END':([3,4,5,6,7,8,9,10,13,16,22,23,26,27,28,29,30,31,32,42,43,46,59,66,67,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,99,100,101,102,105,106,110,111,112,],[-3,-4,-5,-6,-7,-8,-9,-10,-15,-2,-28,-35,-44,-45,-46,-47,-48,-49,-50,-16,70,-27,-42,96,-11,-12,-25,-26,-29,-30,-31,-32,-33,-34,-36,-37,-38,-39,-40,-41,-43,-22,-51,-52,-53,-23,109,-54,-55,-24,]),'ELSE':([3,4,5,6,7,8,9,10,13,16,22,23,26,27,28,29,30,31,32,42,46,59,66,67,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,99,100,101,102,105,110,111,112,],[-3,-4,-5,-6,-7,-8,-9,-10,-15,-2,-28,-35,-44,-45,-46,-47,-48,-49,-50,-16,-27,-42,97,-11,-12,-25,-26,-29,-30,-31,-32,-33,-34,-36,-37,-38,-39,-40,-41,-43,-22,-51,-52,-53,-23,-54,-55,-24,]),'LPAR':([11,12,14,15,17,18,19,21,24,25,33,34,35,36,37,44,45,47,48,49,50,51,52,53,54,55,56,57,58,61,62,63,68,103,104,],[17,18,25,25,25,25,25,25,25,25,61,62,63,64,65,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'EQUAL':([13,],[19,]),'NOT':([14,15,17,18,19,21,25,44,45,61,62,63,68,103,104,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'MINUS':([14,15,17,18,19,21,23,24,25,26,27,28,29,30,31,32,44,45,47,48,49,50,51,52,53,54,55,56,57,58,59,61,62,63,68,79,80,81,82,83,84,85,100,101,102,103,104,110,111,],[24,24,24,24,24,24,54,24,24,-44,-45,-46,-47,-48,-49,-50,24,24,24,24,24,24,24,24,24,24,24,24,24,24,-42,24,24,24,24,-36,-37,-38,-39,-40,-41,-43,-51,-52,-53,24,24,-54,-55,]),'NUMBERO':([14,15,17,18,19,21,24,25,44,45,47,48,49,50,51,52,53,54,55,56,57,58,61,62,63,68,103,104,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'DECIMAL':([14,15,17,18,19,21,24,25,44,45,47,48,49,50,51,52,53,54,55,56,57,58,61,62,63,68,103,104,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'CARACTER':([14,15,17,18,19,21,24,25,44,45,47,48,49,50,51,52,53,54,55,56,57,58,61,62,63,68,103,104,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'CADENA':([14,15,17,18,19,21,24,25,44,45,47,48,49,50,51,52,53,54,55,56,57,58,61,62,63,68,103,104,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'TRUE':([14,15,17,18,19,21,24,25,44,45,47,48,49,50,51,52,53,54,55,56,57,58,61,62,63,68,103,104,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'FALSE':([14,15,17,18,19,21,24,25,44,45,47,48,49,50,51,52,53,54,55,56,57,58,61,62,63,68,103,104,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'TYPEOF':([14,15,17,18,19,21,24,25,44,45,47,48,49,50,51,52,53,54,55,56,57,58,61,62,63,68,103,104,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'STRING':([14,15,17,18,19,21,24,25,44,45,47,48,49,50,51,52,53,54,55,56,57,58,61,62,63,68,103,104,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'FLOAT':([14,15,17,18,19,21,24,25,44,45,47,48,49,50,51,52,53,54,55,56,57,58,61,62,63,68,103,104,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'TRUNC':([14,15,17,18,19,21,24,25,44,45,47,48,49,50,51,52,53,54,55,56,57,58,61,62,63,68,103,104,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'PARSE':([14,15,17,18,19,21,24,25,44,45,47,48,49,50,51,52,53,54,55,56,57,58,61,62,63,68,103,104,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'AND':([20,22,23,26,27,28,29,30,31,32,38,40,42,46,59,60,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,98,100,101,102,107,108,110,111,],[44,-28,-35,-44,-45,-46,-47,-48,-49,-50,44,44,44,-27,-42,44,-25,-26,-29,-30,-31,-32,-33,-34,-36,-37,-38,-39,-40,-41,-43,44,44,44,44,-51,-52,-53,44,44,-54,-55,]),'OR':([20,22,23,26,27,28,29,30,31,32,38,40,42,46,59,60,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,98,100,101,102,107,108,110,111,],[45,-28,-35,-44,-45,-46,-47,-48,-49,-50,45,45,45,-27,-42,45,45,-26,-29,-30,-31,-32,-33,-34,-36,-37,-38,-39,-40,-41,-43,45,45,45,45,-51,-52,-53,45,45,-54,-55,]),'RPAR':([22,23,26,27,28,29,30,31,32,39,40,41,46,59,60,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,98,100,101,102,107,108,110,111,],[-28,-35,-44,-45,-46,-47,-48,-49,-50,67,-14,69,-27,-42,85,-25,-26,-29,-30,-31,-32,-33,-34,-36,-37,-38,-39,-40,-41,-43,100,101,102,-13,-51,-52,-53,110,111,-54,-55,]),'COMMA':([22,23,26,27,28,29,30,31,32,39,40,41,46,59,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,89,90,91,92,93,94,95,98,100,101,102,110,111,],[-28,-35,-44,-45,-46,-47,-48,-49,-50,68,-14,68,-27,-42,-25,-26,-29,-30,-31,-32,-33,-34,-36,-37,-38,-39,-40,-41,-43,103,-17,-18,-19,-20,-21,104,-13,-51,-52,-53,-54,-55,]),'LESS':([22,23,26,27,28,29,30,31,32,59,73,74,75,76,77,78,79,80,81,82,83,84,85,100,101,102,110,111,],[47,-35,-44,-45,-46,-47,-48,-49,-50,-42,None,None,None,None,None,None,-36,-37,-38,-39,-40,-41,-43,-51,-52,-53,-54,-55,]),'LESSEQ':([22,23,26,27,28,29,30,31,32,59,73,74,75,76,77,78,79,80,81,82,83,84,85,100,101,102,110,111,],[48,-35,-44,-45,-46,-47,-48,-49,-50,-42,None,None,None,None,None,None,-36,-37,-38,-39,-40,-41,-43,-51,-52,-53,-54,-55,]),'GREATHER':([22,23,26,27,28,29,30,31,32,59,73,74,75,76,77,78,79,80,81,82,83,84,85,100,101,102,110,111,],[49,-35,-44,-45,-46,-47,-48,-49,-50,-42,None,None,None,None,None,None,-36,-37,-38,-39,-40,-41,-43,-51,-52,-53,-54,-55,]),'GREATHEREQ':([22,23,26,27,28,29,30,31,32,59,73,74,75,76,77,78,79,80,81,82,83,84,85,100,101,102,110,111,],[50,-35,-44,-45,-46,-47,-48,-49,-50,-42,None,None,None,None,None,None,-36,-37,-38,-39,-40,-41,-43,-51,-52,-53,-54,-55,]),'EQUALITY':([22,23,26,27,28,29,30,31,32,59,73,74,75,76,77,78,79,80,81,82,83,84,85,100,101,102,110,111,],[51,-35,-44,-45,-46,-47,-48,-49,-50,-42,None,None,None,None,None,None,-36,-37,-38,-39,-40,-41,-43,-51,-52,-53,-54,-55,]),'DIFERENT':([22,23,26,27,28,29,30,31,32,59,73,74,75,76,77,78,79,80,81,82,83,84,85,100,101,102,110,111,],[52,-35,-44,-45,-46,-47,-48,-49,-50,-42,None,None,None,None,None,None,-36,-37,-38,-39,-40,-41,-43,-51,-52,-53,-54,-55,]),'PLUS':([23,26,27,28,29,30,31,32,59,79,80,81,82,83,84,85,100,101,102,110,111,],[53,-44,-45,-46,-47,-48,-49,-50,-42,-36,-37,-38,-39,-40,-41,-43,-51,-52,-53,-54,-55,]),'TIMES':([23,26,27,28,29,30,31,32,59,79,80,81,82,83,84,85,100,101,102,110,111,],[55,-44,-45,-46,-47,-48,-49,-50,-42,55,55,-38,-39,-40,-41,-43,-51,-52,-53,-54,-55,]),'DIV':([23,26,27,28,29,30,31,32,59,79,80,81,82,83,84,85,100,101,102,110,111,],[56,-44,-45,-46,-47,-48,-49,-50,-42,56,56,-38,-39,-40,-41,-43,-51,-52,-53,-54,-55,]),'MOD':([23,26,27,28,29,30,31,32,59,79,80,81,82,83,84,85,100,101,102,110,111,],[57,-44,-45,-46,-47,-48,-49,-50,-42,57,57,57,57,-40,-41,-43,-51,-52,-53,-54,-55,]),'POT':([23,26,27,28,29,30,31,32,59,79,80,81,82,83,84,85,100,101,102,110,111,],[58,-44,-45,-46,-47,-48,-49,-50,-42,58,58,58,58,58,-41,-43,-51,-52,-53,-54,-55,]),'INT64':([64,65,],[90,90,]),'FLOAT64':([64,65,],[91,91,]),'STR':([64,65,],[92,92,]),'CHR':([64,65,],[93,93,]),'BOOL':([64,65,],[94,94,]),'SEMICOL':([70,96,109,],[99,105,112,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'init':([0,],[1,]),'instrucciones':([0,20,38,97,],[2,43,66,106,]),'instruccion':([0,2,20,38,43,66,97,106,],[3,16,3,3,16,16,3,16,]),'print':([0,2,20,38,43,66,97,106,],[4,4,4,4,4,4,4,4,]),'println':([0,2,20,38,43,66,97,106,],[5,5,5,5,5,5,5,5,]),'definicion':([0,2,20,38,43,66,97,106,],[6,6,6,6,6,6,6,6,]),'asignacion':([0,2,20,38,43,66,97,106,],[7,7,7,7,7,7,7,7,]),'while':([0,2,20,38,43,66,97,106,],[8,8,8,8,8,8,8,8,]),'if':([0,2,20,38,43,66,97,106,],[9,9,9,9,9,9,9,9,]),'if_else':([0,2,20,38,43,66,97,106,],[10,10,10,10,10,10,10,10,]),'exp_logica':([14,15,17,18,19,21,25,44,45,61,62,63,68,103,104,],[20,38,40,40,42,46,60,71,72,86,87,88,98,107,108,]),'exp_relacional':([14,15,17,18,19,21,25,44,45,47,48,49,50,51,52,61,62,63,68,103,104,],[22,22,22,22,22,22,22,22,22,73,74,75,76,77,78,22,22,22,22,22,22,]),'exp_aritmetica':([14,15,17,18,19,21,24,25,44,45,47,48,49,50,51,52,53,54,55,56,57,58,61,62,63,68,103,104,],[23,23,23,23,23,23,59,23,23,23,23,23,23,23,23,23,79,80,81,82,83,84,23,23,23,23,23,23,]),'print_args':([17,18,],[39,41,]),'data_type':([64,65,],[89,95,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> init","S'",1,None,None,None),
  ('init -> instrucciones','init',1,'p_init','gramatica.py',160),
  ('instrucciones -> instrucciones instruccion','instrucciones',2,'p_instrucciones_lista','gramatica.py',164),
  ('instrucciones -> instruccion','instrucciones',1,'p_instrucciones','gramatica.py',169),
  ('instruccion -> print','instruccion',1,'p_instruccion','gramatica.py',173),
  ('instruccion -> println','instruccion',1,'p_instruccion','gramatica.py',174),
  ('instruccion -> definicion','instruccion',1,'p_instruccion','gramatica.py',175),
  ('instruccion -> asignacion','instruccion',1,'p_instruccion','gramatica.py',176),
  ('instruccion -> while','instruccion',1,'p_instruccion','gramatica.py',177),
  ('instruccion -> if','instruccion',1,'p_instruccion','gramatica.py',178),
  ('instruccion -> if_else','instruccion',1,'p_instruccion','gramatica.py',179),
  ('print -> PRINT LPAR print_args RPAR','print',4,'p_print','gramatica.py',183),
  ('println -> PRINTLN LPAR print_args RPAR','println',4,'p_println','gramatica.py',187),
  ('print_args -> print_args COMMA exp_logica','print_args',3,'p_print_args','gramatica.py',191),
  ('print_args -> exp_logica','print_args',1,'p_print_arg','gramatica.py',196),
  ('definicion -> ID','definicion',1,'p_definicion','gramatica.py',200),
  ('asignacion -> ID EQUAL exp_logica','asignacion',3,'p_asignacion','gramatica.py',204),
  ('data_type -> INT64','data_type',1,'p_data_type','gramatica.py',208),
  ('data_type -> FLOAT64','data_type',1,'p_data_type','gramatica.py',209),
  ('data_type -> STR','data_type',1,'p_data_type','gramatica.py',210),
  ('data_type -> CHR','data_type',1,'p_data_type','gramatica.py',211),
  ('data_type -> BOOL','data_type',1,'p_data_type','gramatica.py',212),
  ('while -> WHILE exp_logica instrucciones END SEMICOL','while',5,'p_while','gramatica.py',220),
  ('if -> IF exp_logica instrucciones END SEMICOL','if',5,'p_if','gramatica.py',224),
  ('if_else -> IF exp_logica instrucciones ELSE instrucciones END SEMICOL','if_else',7,'p_if_else','gramatica.py',228),
  ('exp_logica -> exp_logica AND exp_logica','exp_logica',3,'p_logica_binaria','gramatica.py',232),
  ('exp_logica -> exp_logica OR exp_logica','exp_logica',3,'p_logica_binaria','gramatica.py',233),
  ('exp_logica -> NOT exp_logica','exp_logica',2,'p_logica_not','gramatica.py',238),
  ('exp_logica -> exp_relacional','exp_logica',1,'p_logica_to_relacional','gramatica.py',242),
  ('exp_relacional -> exp_relacional LESS exp_relacional','exp_relacional',3,'p_relacional_binaria','gramatica.py',246),
  ('exp_relacional -> exp_relacional LESSEQ exp_relacional','exp_relacional',3,'p_relacional_binaria','gramatica.py',247),
  ('exp_relacional -> exp_relacional GREATHER exp_relacional','exp_relacional',3,'p_relacional_binaria','gramatica.py',248),
  ('exp_relacional -> exp_relacional GREATHEREQ exp_relacional','exp_relacional',3,'p_relacional_binaria','gramatica.py',249),
  ('exp_relacional -> exp_relacional EQUALITY exp_relacional','exp_relacional',3,'p_relacional_binaria','gramatica.py',250),
  ('exp_relacional -> exp_relacional DIFERENT exp_relacional','exp_relacional',3,'p_relacional_binaria','gramatica.py',251),
  ('exp_relacional -> exp_aritmetica','exp_relacional',1,'p_relacinal_to_aritmetica','gramatica.py',260),
  ('exp_aritmetica -> exp_aritmetica PLUS exp_aritmetica','exp_aritmetica',3,'p_aritmetica_binaria','gramatica.py',264),
  ('exp_aritmetica -> exp_aritmetica MINUS exp_aritmetica','exp_aritmetica',3,'p_aritmetica_binaria','gramatica.py',265),
  ('exp_aritmetica -> exp_aritmetica TIMES exp_aritmetica','exp_aritmetica',3,'p_aritmetica_binaria','gramatica.py',266),
  ('exp_aritmetica -> exp_aritmetica DIV exp_aritmetica','exp_aritmetica',3,'p_aritmetica_binaria','gramatica.py',267),
  ('exp_aritmetica -> exp_aritmetica MOD exp_aritmetica','exp_aritmetica',3,'p_aritmetica_binaria','gramatica.py',268),
  ('exp_aritmetica -> exp_aritmetica POT exp_aritmetica','exp_aritmetica',3,'p_aritmetica_binaria','gramatica.py',269),
  ('exp_aritmetica -> MINUS exp_aritmetica','exp_aritmetica',2,'p_aritmetica_negativo','gramatica.py',278),
  ('exp_aritmetica -> LPAR exp_logica RPAR','exp_aritmetica',3,'p_aritmetica_agrupacion','gramatica.py',282),
  ('exp_aritmetica -> NUMBERO','exp_aritmetica',1,'p_aritmetica_basico_num','gramatica.py',286),
  ('exp_aritmetica -> DECIMAL','exp_aritmetica',1,'p_aritmetica_basico_dec','gramatica.py',290),
  ('exp_aritmetica -> CARACTER','exp_aritmetica',1,'p_aritmetica_basico_char','gramatica.py',294),
  ('exp_aritmetica -> CADENA','exp_aritmetica',1,'p_aritmetica_basico_str','gramatica.py',298),
  ('exp_aritmetica -> TRUE','exp_aritmetica',1,'p_aritmetica_basico_true','gramatica.py',302),
  ('exp_aritmetica -> FALSE','exp_aritmetica',1,'p_aritmetica_basico_false','gramatica.py',306),
  ('exp_aritmetica -> ID','exp_aritmetica',1,'p_aritmetica_basico_id','gramatica.py',310),
  ('exp_aritmetica -> TYPEOF LPAR exp_logica RPAR','exp_aritmetica',4,'p_aritmetica_nativa_typeof','gramatica.py',314),
  ('exp_aritmetica -> STRING LPAR exp_logica RPAR','exp_aritmetica',4,'p_aritmetica_nativa_string','gramatica.py',318),
  ('exp_aritmetica -> FLOAT LPAR exp_logica RPAR','exp_aritmetica',4,'p_aritmetica_nativa_float','gramatica.py',322),
  ('exp_aritmetica -> TRUNC LPAR data_type COMMA exp_logica RPAR','exp_aritmetica',6,'p_aritmetica_nativa_trunc','gramatica.py',326),
  ('exp_aritmetica -> PARSE LPAR data_type COMMA exp_logica RPAR','exp_aritmetica',6,'p_aritmetica_nativa_parse','gramatica.py',330),
]
