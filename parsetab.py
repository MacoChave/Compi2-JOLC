
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftTIMESDIVleftPOTrightUMINUSDECIMAL DIFERENT DIV ELSE EQUAL EQUALITY FLOAT GREATHER GREATHEREQ ID IF INT LBRACE LESS LESSEQ LOWERCASE LPAR MINUS NUMBER PARSE PLUS POT PRINT PRINTLN RBRACE RPAR SEMICOL STR STRING TIMES TYPEOF UPPERCASE WHILEinit : instruccionesinstrucciones : instrucciones instruccioninstrucciones : instruccioninstruccion  : print\n                    | println\n                    | definicion\n                    | asignacion\n                    | while\n                    | if\n                    | if_elseprint : PRINT LPAR expresion_cadena RPARprintln : PRINTLN LPAR expresion_cadena RPARdefinicion : IDasignacion : ID EQUAL expresion_numericawhile : WHILE LPAR expresion_logica RPAR LBRACE instrucciones RBRACEif : IF LPAR expresion_logica RPAR LBRACE instrucciones RBRACEif_else : IF LPAR expresion_logica RPAR LBRACE instrucciones RBRACE ELSE LBRACE instrucciones RBRACEexpresion_numerica   : expresion_numerica PLUS expresion_numerica\n                            | expresion_numerica MINUS expresion_numerica\n                            | expresion_numerica TIMES expresion_numerica\n                            | expresion_numerica DIV expresion_numerica\n                            | expresion_numerica POT expresion_numericaexpresion_numerica : MINUS expresion_numerica %prec UMINUSexpresion_numerica : LPAR expresion_numerica RPARexpresion_numerica : NUMBER\n                        | DECIMALexpresion_numerica : IDexpresion_cadena : STRINGexpresion_cadena : expresion_numericaexpresion_logica : expresion_numerica LESS expresion_numerica\n                        | expresion_numerica LESSEQ expresion_numerica\n                        | expresion_numerica GREATHER expresion_numerica\n                        | expresion_numerica GREATHEREQ expresion_numerica\n                        | expresion_numerica EQUALITY expresion_numerica\n                        | expresion_numerica DIFERENT expresion_numerica'
    
_lr_action_items = {'PRINT':([0,2,3,4,5,6,7,8,9,10,13,16,27,28,29,31,36,42,43,52,53,54,55,56,57,58,65,66,67,68,69,71,72,73,],[11,11,-3,-4,-5,-6,-7,-8,-9,-10,-13,-2,-25,-26,-27,-14,-11,-23,-12,-24,-18,-19,-20,-21,-22,11,11,11,11,-15,-16,11,11,-17,]),'PRINTLN':([0,2,3,4,5,6,7,8,9,10,13,16,27,28,29,31,36,42,43,52,53,54,55,56,57,58,65,66,67,68,69,71,72,73,],[12,12,-3,-4,-5,-6,-7,-8,-9,-10,-13,-2,-25,-26,-27,-14,-11,-23,-12,-24,-18,-19,-20,-21,-22,12,12,12,12,-15,-16,12,12,-17,]),'ID':([0,2,3,4,5,6,7,8,9,10,13,16,17,18,19,20,21,22,26,27,28,29,31,36,37,38,39,40,41,42,43,45,46,47,48,49,50,52,53,54,55,56,57,58,65,66,67,68,69,71,72,73,],[13,13,-3,-4,-5,-6,-7,-8,-9,-10,-13,-2,29,29,29,29,29,29,29,-25,-26,-27,-14,-11,29,29,29,29,29,-23,-12,29,29,29,29,29,29,-24,-18,-19,-20,-21,-22,13,13,13,13,-15,-16,13,13,-17,]),'WHILE':([0,2,3,4,5,6,7,8,9,10,13,16,27,28,29,31,36,42,43,52,53,54,55,56,57,58,65,66,67,68,69,71,72,73,],[14,14,-3,-4,-5,-6,-7,-8,-9,-10,-13,-2,-25,-26,-27,-14,-11,-23,-12,-24,-18,-19,-20,-21,-22,14,14,14,14,-15,-16,14,14,-17,]),'IF':([0,2,3,4,5,6,7,8,9,10,13,16,27,28,29,31,36,42,43,52,53,54,55,56,57,58,65,66,67,68,69,71,72,73,],[15,15,-3,-4,-5,-6,-7,-8,-9,-10,-13,-2,-25,-26,-27,-14,-11,-23,-12,-24,-18,-19,-20,-21,-22,15,15,15,15,-15,-16,15,15,-17,]),'$end':([1,2,3,4,5,6,7,8,9,10,13,16,27,28,29,31,36,42,43,52,53,54,55,56,57,68,69,73,],[0,-1,-3,-4,-5,-6,-7,-8,-9,-10,-13,-2,-25,-26,-27,-14,-11,-23,-12,-24,-18,-19,-20,-21,-22,-15,-16,-17,]),'RBRACE':([3,4,5,6,7,8,9,10,13,16,27,28,29,31,36,42,43,52,53,54,55,56,57,66,67,68,69,72,73,],[-3,-4,-5,-6,-7,-8,-9,-10,-13,-2,-25,-26,-27,-14,-11,-23,-12,-24,-18,-19,-20,-21,-22,68,69,-15,-16,73,-17,]),'LPAR':([11,12,14,15,17,18,19,20,21,22,26,37,38,39,40,41,45,46,47,48,49,50,],[17,18,20,21,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'EQUAL':([13,],[19,]),'STRING':([17,18,],[24,24,]),'MINUS':([17,18,19,20,21,22,25,26,27,28,29,31,33,35,37,38,39,40,41,42,45,46,47,48,49,50,52,53,54,55,56,57,59,60,61,62,63,64,],[26,26,26,26,26,26,38,26,-25,-26,-27,38,38,38,26,26,26,26,26,-23,26,26,26,26,26,26,-24,-18,-19,-20,-21,-22,38,38,38,38,38,38,]),'NUMBER':([17,18,19,20,21,22,26,37,38,39,40,41,45,46,47,48,49,50,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'DECIMAL':([17,18,19,20,21,22,26,37,38,39,40,41,45,46,47,48,49,50,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'RPAR':([23,24,25,27,28,29,30,32,34,35,42,52,53,54,55,56,57,59,60,61,62,63,64,],[36,-28,-29,-25,-26,-27,43,44,51,52,-23,-24,-18,-19,-20,-21,-22,-30,-31,-32,-33,-34,-35,]),'PLUS':([25,27,28,29,31,33,35,42,52,53,54,55,56,57,59,60,61,62,63,64,],[37,-25,-26,-27,37,37,37,-23,-24,-18,-19,-20,-21,-22,37,37,37,37,37,37,]),'TIMES':([25,27,28,29,31,33,35,42,52,53,54,55,56,57,59,60,61,62,63,64,],[39,-25,-26,-27,39,39,39,-23,-24,39,39,-20,-21,-22,39,39,39,39,39,39,]),'DIV':([25,27,28,29,31,33,35,42,52,53,54,55,56,57,59,60,61,62,63,64,],[40,-25,-26,-27,40,40,40,-23,-24,40,40,-20,-21,-22,40,40,40,40,40,40,]),'POT':([25,27,28,29,31,33,35,42,52,53,54,55,56,57,59,60,61,62,63,64,],[41,-25,-26,-27,41,41,41,-23,-24,41,41,41,41,-22,41,41,41,41,41,41,]),'LESS':([27,28,29,33,42,52,53,54,55,56,57,],[-25,-26,-27,45,-23,-24,-18,-19,-20,-21,-22,]),'LESSEQ':([27,28,29,33,42,52,53,54,55,56,57,],[-25,-26,-27,46,-23,-24,-18,-19,-20,-21,-22,]),'GREATHER':([27,28,29,33,42,52,53,54,55,56,57,],[-25,-26,-27,47,-23,-24,-18,-19,-20,-21,-22,]),'GREATHEREQ':([27,28,29,33,42,52,53,54,55,56,57,],[-25,-26,-27,48,-23,-24,-18,-19,-20,-21,-22,]),'EQUALITY':([27,28,29,33,42,52,53,54,55,56,57,],[-25,-26,-27,49,-23,-24,-18,-19,-20,-21,-22,]),'DIFERENT':([27,28,29,33,42,52,53,54,55,56,57,],[-25,-26,-27,50,-23,-24,-18,-19,-20,-21,-22,]),'LBRACE':([44,51,70,],[58,65,71,]),'ELSE':([69,],[70,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'init':([0,],[1,]),'instrucciones':([0,58,65,71,],[2,66,67,72,]),'instruccion':([0,2,58,65,66,67,71,72,],[3,16,3,3,16,16,3,16,]),'print':([0,2,58,65,66,67,71,72,],[4,4,4,4,4,4,4,4,]),'println':([0,2,58,65,66,67,71,72,],[5,5,5,5,5,5,5,5,]),'definicion':([0,2,58,65,66,67,71,72,],[6,6,6,6,6,6,6,6,]),'asignacion':([0,2,58,65,66,67,71,72,],[7,7,7,7,7,7,7,7,]),'while':([0,2,58,65,66,67,71,72,],[8,8,8,8,8,8,8,8,]),'if':([0,2,58,65,66,67,71,72,],[9,9,9,9,9,9,9,9,]),'if_else':([0,2,58,65,66,67,71,72,],[10,10,10,10,10,10,10,10,]),'expresion_cadena':([17,18,],[23,30,]),'expresion_numerica':([17,18,19,20,21,22,26,37,38,39,40,41,45,46,47,48,49,50,],[25,25,31,33,33,35,42,53,54,55,56,57,59,60,61,62,63,64,]),'expresion_logica':([20,21,],[32,34,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> init","S'",1,None,None,None),
  ('init -> instrucciones','init',1,'p_init','gramatica.py',118),
  ('instrucciones -> instrucciones instruccion','instrucciones',2,'p_instrucciones_lista','gramatica.py',122),
  ('instrucciones -> instruccion','instrucciones',1,'p_instrucciones','gramatica.py',127),
  ('instruccion -> print','instruccion',1,'p_instruccion','gramatica.py',131),
  ('instruccion -> println','instruccion',1,'p_instruccion','gramatica.py',132),
  ('instruccion -> definicion','instruccion',1,'p_instruccion','gramatica.py',133),
  ('instruccion -> asignacion','instruccion',1,'p_instruccion','gramatica.py',134),
  ('instruccion -> while','instruccion',1,'p_instruccion','gramatica.py',135),
  ('instruccion -> if','instruccion',1,'p_instruccion','gramatica.py',136),
  ('instruccion -> if_else','instruccion',1,'p_instruccion','gramatica.py',137),
  ('print -> PRINT LPAR expresion_cadena RPAR','print',4,'p_print','gramatica.py',141),
  ('println -> PRINTLN LPAR expresion_cadena RPAR','println',4,'p_println','gramatica.py',145),
  ('definicion -> ID','definicion',1,'p_definicion','gramatica.py',149),
  ('asignacion -> ID EQUAL expresion_numerica','asignacion',3,'p_asignacion','gramatica.py',153),
  ('while -> WHILE LPAR expresion_logica RPAR LBRACE instrucciones RBRACE','while',7,'p_while','gramatica.py',157),
  ('if -> IF LPAR expresion_logica RPAR LBRACE instrucciones RBRACE','if',7,'p_if','gramatica.py',161),
  ('if_else -> IF LPAR expresion_logica RPAR LBRACE instrucciones RBRACE ELSE LBRACE instrucciones RBRACE','if_else',11,'p_if_else','gramatica.py',165),
  ('expresion_numerica -> expresion_numerica PLUS expresion_numerica','expresion_numerica',3,'p_expresion_binaria','gramatica.py',169),
  ('expresion_numerica -> expresion_numerica MINUS expresion_numerica','expresion_numerica',3,'p_expresion_binaria','gramatica.py',170),
  ('expresion_numerica -> expresion_numerica TIMES expresion_numerica','expresion_numerica',3,'p_expresion_binaria','gramatica.py',171),
  ('expresion_numerica -> expresion_numerica DIV expresion_numerica','expresion_numerica',3,'p_expresion_binaria','gramatica.py',172),
  ('expresion_numerica -> expresion_numerica POT expresion_numerica','expresion_numerica',3,'p_expresion_binaria','gramatica.py',173),
  ('expresion_numerica -> MINUS expresion_numerica','expresion_numerica',2,'p_expresion_unaria','gramatica.py',181),
  ('expresion_numerica -> LPAR expresion_numerica RPAR','expresion_numerica',3,'p_expresion_agrupacion','gramatica.py',185),
  ('expresion_numerica -> NUMBER','expresion_numerica',1,'p_number','gramatica.py',189),
  ('expresion_numerica -> DECIMAL','expresion_numerica',1,'p_number','gramatica.py',190),
  ('expresion_numerica -> ID','expresion_numerica',1,'p_id','gramatica.py',194),
  ('expresion_cadena -> STRING','expresion_cadena',1,'p_cadena','gramatica.py',198),
  ('expresion_cadena -> expresion_numerica','expresion_cadena',1,'p_cadena_numerica','gramatica.py',202),
  ('expresion_logica -> expresion_numerica LESS expresion_numerica','expresion_logica',3,'p_expresion_logica','gramatica.py',206),
  ('expresion_logica -> expresion_numerica LESSEQ expresion_numerica','expresion_logica',3,'p_expresion_logica','gramatica.py',207),
  ('expresion_logica -> expresion_numerica GREATHER expresion_numerica','expresion_logica',3,'p_expresion_logica','gramatica.py',208),
  ('expresion_logica -> expresion_numerica GREATHEREQ expresion_numerica','expresion_logica',3,'p_expresion_logica','gramatica.py',209),
  ('expresion_logica -> expresion_numerica EQUALITY expresion_numerica','expresion_logica',3,'p_expresion_logica','gramatica.py',210),
  ('expresion_logica -> expresion_numerica DIFERENT expresion_numerica','expresion_logica',3,'p_expresion_logica','gramatica.py',211),
]
